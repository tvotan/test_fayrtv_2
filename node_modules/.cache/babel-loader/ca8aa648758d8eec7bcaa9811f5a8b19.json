{"ast":null,"code":"var _jsxFileName = \"/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test_2/src/components/SearchResult/SearchResult.tsx\";\nimport React from 'react';\nimport { Menu, Icon, Label } from 'semantic-ui-react';\nimport { decodeEntities } from '../../utils';\nexport const YouTubeSearchResult = props => {\n  const result = props;\n  const setMedia = props.setMedia;\n  return /*#__PURE__*/React.createElement(Menu.Item, {\n    onClick: e => {\n      setMedia(e, {\n        value: result.url\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      height: '40px'\n    },\n    src: result.img,\n    alt: result.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Icon, {\n    name: \"youtube\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, decodeEntities(result.name))));\n};\nexport const MediaPathSearchResult = props => {\n  const result = props;\n  const setMedia = props.setMedia;\n  return /*#__PURE__*/React.createElement(Menu.Item, {\n    onClick: e => {\n      setMedia(e, {\n        value: result.url\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), result.name));\n};\nexport class StreamPathSearchResult extends React.Component {\n  render() {\n    const result = this.props;\n    const setMedia = this.props.setMedia;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      onClick: async e => {\n        this.props.launchMultiSelect([]);\n        let response = await window.fetch(this.props.streamPath + '/data?torrent=' + encodeURIComponent(result.magnet));\n        let metadata = await response.json(); // console.log(metadata);\n\n        if (metadata.files.filter(file => file.length > 10 * 1024 * 1024).length > 1) {\n          // Multiple large files, present user selection\n          const multiStreamSelection = metadata.files.map((file, i) => ({ ...file,\n            url: this.props.streamPath + '/stream?torrent=' + encodeURIComponent(result.magnet) + '&fileIndex=' + i\n          }));\n          multiStreamSelection.sort((a, b) => a.name.localeCompare(b.name));\n          this.props.launchMultiSelect(multiStreamSelection);\n        } else {\n          this.props.launchMultiSelect(undefined);\n          setMedia(e, {\n            value: this.props.streamPath + '/stream?torrent=' + encodeURIComponent(result.magnet)\n          });\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      circular: true,\n      empty: true,\n      color: Number(result.seeders) ? 'green' : 'red',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Icon, {\n      name: \"film\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }), result.name + ' - ' + result.size + ' - ' + result.seeders + ' peers'));\n  }\n\n}","map":{"version":3,"sources":["/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test_2/src/components/SearchResult/SearchResult.tsx"],"names":["React","Menu","Icon","Label","decodeEntities","YouTubeSearchResult","props","result","setMedia","e","value","url","display","alignItems","height","img","name","marginLeft","MediaPathSearchResult","StreamPathSearchResult","Component","render","launchMultiSelect","response","window","fetch","streamPath","encodeURIComponent","magnet","metadata","json","files","filter","file","length","multiStreamSelection","map","i","sort","a","b","localeCompare","undefined","Number","seeders","size"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Menu, Icon, Label } from 'semantic-ui-react';\nimport { decodeEntities } from '../../utils';\n\nexport const YouTubeSearchResult = (\n  props: SearchResult & { setMedia: Function }\n) => {\n  const result = props;\n  const setMedia = props.setMedia;\n  return (\n    <Menu.Item\n      onClick={(e) => {\n        setMedia(e, { value: result.url });\n      }}\n    >\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <img style={{ height: '40px' }} src={result.img} alt={result.name} />\n        <Icon name=\"youtube\" />\n        <div style={{ marginLeft: '5px' }}>{decodeEntities(result.name)}</div>\n      </div>\n    </Menu.Item>\n  );\n};\n\nexport const MediaPathSearchResult = (\n  props: SearchResult & { setMedia: Function }\n) => {\n  const result = props;\n  const setMedia = props.setMedia;\n  return (\n    <Menu.Item\n      onClick={(e) => {\n        setMedia(e, { value: result.url });\n      }}\n    >\n      <div style={{ display: 'flex' }}>\n        <Icon name=\"file\" />\n        {result.name}\n      </div>\n    </Menu.Item>\n  );\n};\n\nexport class StreamPathSearchResult extends React.Component<\n  SearchResult & {\n    setMedia: Function;\n    launchMultiSelect: Function;\n    streamPath: string;\n  }\n> {\n  render() {\n    const result = this.props;\n    const setMedia = this.props.setMedia;\n    return (\n      <React.Fragment>\n        <Menu.Item\n          onClick={async (e) => {\n            this.props.launchMultiSelect([]);\n            let response = await window.fetch(\n              this.props.streamPath +\n                '/data?torrent=' +\n                encodeURIComponent(result.magnet!)\n            );\n            let metadata = await response.json();\n            // console.log(metadata);\n            if (\n              metadata.files.filter(\n                (file: any) => file.length > 10 * 1024 * 1024\n              ).length > 1\n            ) {\n              // Multiple large files, present user selection\n              const multiStreamSelection = metadata.files.map(\n                (file: any, i: number) => ({\n                  ...file,\n                  url:\n                    this.props.streamPath +\n                    '/stream?torrent=' +\n                    encodeURIComponent(result.magnet!) +\n                    '&fileIndex=' +\n                    i,\n                })\n              );\n              multiStreamSelection.sort((a: any, b: any) =>\n                a.name.localeCompare(b.name)\n              );\n              this.props.launchMultiSelect(multiStreamSelection);\n            } else {\n              this.props.launchMultiSelect(undefined);\n              setMedia(e, {\n                value:\n                  this.props.streamPath +\n                  '/stream?torrent=' +\n                  encodeURIComponent(result.magnet!),\n              });\n            }\n          }}\n        >\n          <Label\n            circular\n            empty\n            color={Number(result.seeders) ? 'green' : 'red'}\n          />\n          <Icon name=\"film\" />\n          {result.name +\n            ' - ' +\n            result.size +\n            ' - ' +\n            result.seeders +\n            ' peers'}\n        </Menu.Item>\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}