{"ast":null,"code":"var _jsxFileName = \"/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test_2/src/components/SearchComponent/SearchComponent.tsx\";\nimport React from 'react';\nimport { debounce, getYouTubeResults, getMediaPathResults, getStreamPathResults } from '../../utils';\nimport { Dropdown } from 'semantic-ui-react';\nimport { YouTubeSearchResult, MediaPathSearchResult, StreamPathSearchResult } from '../SearchResult/SearchResult';\nexport class SearchComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      results: [],\n      resetDropdown: Number(new Date()),\n      loading: false,\n      lastResultTimestamp: Number(new Date()),\n      inputMedia: undefined\n    };\n    this.debounced = null;\n\n    this.doSearch = async e => {\n      e.persist();\n      this.setState({\n        inputMedia: e.target.value\n      }, () => {\n        if (!this.debounced) {\n          this.debounced = debounce(async () => {\n            this.setState({\n              loading: true\n            });\n            let query = this.state.inputMedia || '';\n            let results = [];\n            let timestamp = Number(new Date());\n\n            if (this.props.type === 'youtube') {\n              results = await getYouTubeResults(query);\n            } else if (this.props.type === 'media' && this.props.mediaPath) {\n              results = await getMediaPathResults(this.props.mediaPath, query);\n            } else if (this.props.type === 'stream' && this.props.streamPath) {\n              results = await getStreamPathResults(this.props.streamPath, query);\n            }\n\n            if (timestamp > this.state.lastResultTimestamp) {\n              this.setState({\n                loading: false,\n                results,\n                lastResultTimestamp: timestamp\n              });\n            }\n          }, 500);\n        }\n\n        this.debounced();\n      });\n    };\n\n    this.setMedia = (e, data) => {\n      window.setTimeout(() => this.setState({\n        resetDropdown: Number(new Date())\n      }), 300);\n      this.props.setMedia(e, data);\n    };\n  }\n\n  render() {\n    const setMedia = this.setMedia;\n    let placeholder = 'Search streams';\n    let icon = 'film';\n\n    if (this.props.type === 'youtube') {\n      placeholder = 'Search YouTube';\n      icon = 'youtube';\n    } else if (this.props.type === 'media') {\n      placeholder = this.props.mediaPath || '';\n      icon = 'file';\n    }\n\n    if (this.state.loading) {\n      icon = 'loading circle notch';\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      key: this.state.resetDropdown,\n      fluid: true,\n      style: {\n        height: '36px'\n      },\n      button: true,\n      icon: icon,\n      className: \"icon\",\n      labeled: true,\n      disabled: this.props.disabled,\n      search: () => {},\n      text: placeholder,\n      onSearchChange: this.doSearch,\n      onFocus: async e => {\n        if (this.props.type === 'media' && this.props.mediaPath) {\n          this.doSearch(e);\n        }\n      } // onBlur={() => this.setState({ results: this.state.watchOptions })}\n      //searchQuery={this.state.query}\n      //loading={this.state.loading}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, Boolean(this.state.results.length) ? /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, this.state.results.map(result => {\n      if (this.props.type === 'youtube') {\n        return /*#__PURE__*/React.createElement(YouTubeSearchResult, Object.assign({\n          key: result.url\n        }, result, {\n          setMedia: setMedia,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }\n        }));\n      } else if (this.props.type === 'media') {\n        return /*#__PURE__*/React.createElement(MediaPathSearchResult, Object.assign({\n          key: result.url\n        }, result, {\n          setMedia: setMedia,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(StreamPathSearchResult, Object.assign({\n        key: result.url\n      }, result, {\n        setMedia: setMedia,\n        launchMultiSelect: this.props.launchMultiSelect,\n        streamPath: this.props.streamPath || '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }\n      }));\n    })) : null));\n  }\n\n}","map":{"version":3,"sources":["/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test_2/src/components/SearchComponent/SearchComponent.tsx"],"names":["React","debounce","getYouTubeResults","getMediaPathResults","getStreamPathResults","Dropdown","YouTubeSearchResult","MediaPathSearchResult","StreamPathSearchResult","SearchComponent","Component","state","results","resetDropdown","Number","Date","loading","lastResultTimestamp","inputMedia","undefined","debounced","doSearch","e","persist","setState","target","value","query","timestamp","props","type","mediaPath","streamPath","setMedia","data","window","setTimeout","render","placeholder","icon","height","disabled","Boolean","length","map","result","url","launchMultiSelect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  debounce,\n  getYouTubeResults,\n  getMediaPathResults,\n  getStreamPathResults,\n} from '../../utils';\nimport { DropdownProps, Dropdown } from 'semantic-ui-react';\nimport {\n  YouTubeSearchResult,\n  MediaPathSearchResult,\n  StreamPathSearchResult,\n} from '../SearchResult/SearchResult';\n\ninterface SearchComponentProps {\n  setMedia: Function;\n  type?: 'youtube' | 'media' | 'stream';\n  launchMultiSelect?: Function;\n  mediaPath: string | undefined;\n  streamPath: string | undefined;\n  disabled?: boolean;\n}\n\nexport class SearchComponent extends React.Component<SearchComponentProps> {\n  state = {\n    results: [] as SearchResult[],\n    resetDropdown: Number(new Date()),\n    loading: false,\n    lastResultTimestamp: Number(new Date()),\n    inputMedia: undefined,\n  };\n  debounced: any = null;\n\n  doSearch = async (e: any) => {\n    e.persist();\n    this.setState({ inputMedia: e.target.value }, () => {\n      if (!this.debounced) {\n        this.debounced = debounce(async () => {\n          this.setState({ loading: true });\n          let query = this.state.inputMedia || '';\n          let results: SearchResult[] = [];\n          let timestamp = Number(new Date());\n          if (this.props.type === 'youtube') {\n            results = await getYouTubeResults(query);\n          } else if (this.props.type === 'media' && this.props.mediaPath) {\n            results = await getMediaPathResults(this.props.mediaPath, query);\n          } else if (this.props.type === 'stream' && this.props.streamPath) {\n            results = await getStreamPathResults(this.props.streamPath, query);\n          }\n          if (timestamp > this.state.lastResultTimestamp) {\n            this.setState({\n              loading: false,\n              results,\n              lastResultTimestamp: timestamp,\n            });\n          }\n        }, 500);\n      }\n      this.debounced();\n    });\n  };\n\n  setMedia = (e: any, data: DropdownProps) => {\n    window.setTimeout(\n      () => this.setState({ resetDropdown: Number(new Date()) }),\n      300\n    );\n    this.props.setMedia(e, data);\n  };\n\n  render() {\n    const setMedia = this.setMedia;\n    let placeholder = 'Search streams';\n    let icon = 'film';\n    if (this.props.type === 'youtube') {\n      placeholder = 'Search YouTube';\n      icon = 'youtube';\n    } else if (this.props.type === 'media') {\n      placeholder = this.props.mediaPath || '';\n      icon = 'file';\n    }\n    if (this.state.loading) {\n      icon = 'loading circle notch';\n    }\n    return (\n      <React.Fragment>\n        <Dropdown\n          key={this.state.resetDropdown}\n          fluid\n          style={{ height: '36px' }}\n          button\n          icon={icon}\n          className=\"icon\"\n          labeled\n          disabled={this.props.disabled}\n          search={(() => {}) as any}\n          text={placeholder}\n          onSearchChange={this.doSearch}\n          onFocus={async (e) => {\n            if (this.props.type === 'media' && this.props.mediaPath) {\n              this.doSearch(e);\n            }\n          }}\n          // onBlur={() => this.setState({ results: this.state.watchOptions })}\n          //searchQuery={this.state.query}\n          //loading={this.state.loading}\n        >\n          {Boolean(this.state.results.length) ? (\n            <Dropdown.Menu>\n              {this.state.results.map((result: SearchResult) => {\n                if (this.props.type === 'youtube') {\n                  return (\n                    <YouTubeSearchResult\n                      key={result.url}\n                      {...result}\n                      setMedia={setMedia}\n                    />\n                  );\n                } else if (this.props.type === 'media') {\n                  return (\n                    <MediaPathSearchResult\n                      key={result.url}\n                      {...result}\n                      setMedia={setMedia}\n                    />\n                  );\n                }\n                return (\n                  <StreamPathSearchResult\n                    key={result.url}\n                    {...result}\n                    setMedia={setMedia}\n                    launchMultiSelect={this.props.launchMultiSelect as Function}\n                    streamPath={this.props.streamPath || ''}\n                  />\n                );\n              })}\n            </Dropdown.Menu>\n          ) : null}\n        </Dropdown>\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}