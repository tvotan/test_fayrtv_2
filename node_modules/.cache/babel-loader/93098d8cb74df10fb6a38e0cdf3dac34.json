{"ast":null,"code":"var _jsxFileName = \"/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test_2/src/components/VBrowser/VBrowser.tsx\";\nimport React from 'react';\nimport { EVENT } from './events';\nimport { NekoClient } from '.'; // import { EVENT } from './events';\n\nexport default class VBrowser extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.focused = false;\n    this.fullscreen = false;\n    this.activeKeys = new Set();\n    this.controlling = false;\n    this.scroll = 1;\n    this.scroll_invert = true;\n    this.width = 1280;\n    this.height = 720;\n    this.rate = 30;\n    this.keepAliveInterval = 0;\n    this._container = React.createRef();\n    this._overlay = React.createRef();\n    this._video = React.createRef();\n    this.$client = new NekoClient();\n\n    this.takeControl = () => {\n      if (this.$client.connected) {\n        this.$client.sendMessage(EVENT.ADMIN.CONTROL);\n      } else {\n        this.$client.once(EVENT.CONNECTED, () => {\n          this.$client.sendMessage(EVENT.ADMIN.CONTROL);\n        });\n      }\n    };\n\n    this.changeResolution = resString => {\n      const split = resString.split(/x|@/);\n      const width = Number(split[0]);\n      const height = Number(split[1]);\n      const rate = Number(split[2]);\n      this.$client.sendMessage(EVENT.SCREEN.SET, {\n        width,\n        height,\n        rate\n      });\n    };\n\n    this.onFocus = async () => {\n      if (this.props.controlling && navigator.clipboard && typeof navigator.clipboard.readText === 'function') {\n        const text = await navigator.clipboard.readText(); // console.log('[FOCUS]', text);\n        // send clipboard contents to vbrowser\n\n        this.$client.sendMessage(EVENT.CONTROL.CLIPBOARD, {\n          text\n        });\n      }\n    };\n\n    this.onBlur = () => {\n      if (!this.focused || !this.controlling) {\n        return;\n      }\n\n      this.activeKeys.forEach(key => {\n        this.$client.sendData('keyup', {\n          key\n        });\n        this.activeKeys.delete(key);\n      });\n    };\n\n    this.onClick = e => {\n      e.stopPropagation();\n      e.preventDefault();\n    };\n\n    this.onContextMenu = e => {\n      e.stopPropagation();\n      e.preventDefault();\n    };\n\n    this.onMousePos = e => {\n      const {\n        w,\n        h\n      } = {\n        w: this.width,\n        h: this.height\n      };\n\n      const rect = this._overlay.current.getBoundingClientRect();\n\n      this.$client.sendData('mousemove', {\n        x: Math.round(w / rect.width * (e.clientX - rect.left)),\n        y: Math.round(h / rect.height * (e.clientY - rect.top))\n      });\n    };\n\n    this.onWheel = e => {\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (!this.controlling) {\n        return;\n      }\n\n      this.onMousePos(e);\n      let x = e.deltaX;\n      let y = e.deltaY;\n\n      if (this.scroll_invert) {\n        x = x * -1;\n        y = y * -1;\n      }\n\n      x = Math.min(Math.max(x, -this.scroll), this.scroll);\n      y = Math.min(Math.max(y, -this.scroll), this.scroll);\n      this.$client.sendData('wheel', {\n        x,\n        y\n      });\n    };\n\n    this.onMouseDown = e => {\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (!this.controlling) {\n        return;\n      }\n\n      this.onMousePos(e);\n      this.$client.sendData('mousedown', {\n        key: e.button\n      });\n    };\n\n    this.onMouseUp = e => {\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (!this.controlling) {\n        return;\n      }\n\n      this.onMousePos(e);\n      this.$client.sendData('mouseup', {\n        key: e.button\n      });\n    };\n\n    this.onMouseMove = e => {\n      if (!this.controlling) {\n        return;\n      }\n\n      this.onMousePos(e);\n    };\n\n    this.onMouseEnter = e => {\n      if (!this.controlling) {\n        return;\n      }\n\n      this._overlay.current.focus();\n\n      this.onFocus();\n      this.focused = true;\n    };\n\n    this.onMouseLeave = e => {\n      if (!this.controlling) {\n        return;\n      }\n\n      this._overlay.current.blur();\n\n      this.focused = false;\n    };\n\n    this.getCode = e => {\n      let key = e.keyCode;\n\n      if (key === 59 && (e.key === ';' || e.key === ':')) {\n        key = 186;\n      }\n\n      if (key === 61 && (e.key === '=' || e.key === '+')) {\n        key = 187;\n      }\n\n      if (key === 173 && (e.key === '-' || e.key === '_')) {\n        key = 189;\n      }\n\n      return key;\n    };\n\n    this.onKeyDown = e => {\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (!this.focused || !this.controlling) {\n        return;\n      }\n\n      let key = this.getCode(e);\n      this.$client.sendData('keydown', {\n        key\n      });\n      this.activeKeys.add(key);\n    };\n\n    this.onKeyUp = e => {\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (!this.focused || !this.controlling) {\n        return;\n      }\n\n      let key = this.getCode(e);\n      this.$client.sendData('keyup', {\n        key\n      });\n      this.activeKeys.delete(key);\n    };\n\n    this.onResize = () => {// let height = 0;\n      // if (!this.fullscreen) {\n      //   const offsetWidth = this._component.current?.offsetWidth;\n      //   const offsetHeight = this._component.current?.offsetHeight;\n      //   this._player.current!.style.width = `${offsetWidth}px`;\n      //   this._player.current!.style.height = `${offsetHeight}px`;\n      //   height = offsetHeight as number;\n      // } else {\n      //   const offsetHeight = this._player.current?.offsetHeight;\n      //   height = offsetHeight as number;\n      // }\n      // this._container.current!.style.maxWidth = `${\n      //   (this.horizontal / this.vertical) * height\n      // }px`;\n      // this._aspect.current!.style.paddingBottom = `${\n      //   (this.vertical / this.horizontal) * 100\n      // }%`;\n    };\n  }\n\n  componentDidMount() {\n    var _document$getElementB;\n\n    this.controlling = this.props.controlling;\n    this.keepAliveInterval = window.setInterval(() => this.$client.sendMessage('ka'), 10000);\n    this.$client.on(EVENT.CONNECTED, () => {\n      if (this.props.controlling) {\n        this.takeControl();\n      }\n    });\n    this.$client.on(EVENT.DISCONNECTED, () => {\n      this.$client.login(url, this.props.password, this.props.username);\n    });\n    this.$client.on(EVENT.SCREEN.RESOLUTION, data => {\n      this.width = data.width;\n      this.height = data.height;\n      this.rate = data.rate; // Update our state with the resolution sent from server\n\n      this.props.setResolution(`${this.width}x${this.height}@${this.rate}`);\n    });\n    this.$client.on(EVENT.TRACK, (track, stream) => {\n      // console.log(track, streams);\n      const video = document.getElementById('leftVideo');\n      video.src = '';\n      video.srcObject = stream;\n\n      if (!this.props.isAutoPlayable) {\n        video.muted = true;\n      }\n\n      video.play();\n    });\n    this.$client.on(EVENT.CONTROL.CLIPBOARD, this.onClipboardChanged);\n\n    if (process.env.NODE_ENV === 'development') {\n      this.$client.on('debug', (e, data) => console.log(e, data));\n    }\n\n    const url = 'wss://' + this.props.hostname + '/';\n    this.$client.login(url, this.props.password, this.props.username); // this._container.current?.addEventListener('resize', this.onResize);\n    // this.onResize();\n    // document.addEventListener('fullscreenchange', () => {\n    //   this.onResize();\n    // });\n\n    document.addEventListener('focusin', this.onFocus.bind(this));\n    document.addEventListener('focusout', this.onBlur.bind(this));\n    (_document$getElementB = document.getElementById('leftOverlay')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.addEventListener('wheel', this.onWheel, {\n      passive: false\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    // console.log(this.props.controlling, prevProps.controlling);\n    this.controlling = this.props.controlling;\n\n    if (this.props.controlling && !prevProps.controlling) {\n      this.takeControl();\n    }\n\n    if (this.props.resolution !== prevProps.resolution) {\n      this.changeResolution(this.props.resolution);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.keepAliveInterval);\n    this.$client.removeAllListeners();\n    this.$client.logout();\n  }\n\n  onClipboardChanged(clipboard) {\n    if (navigator.clipboard && typeof navigator.clipboard.writeText === 'function') {\n      // Received clipboard contents from vbrowser\n      navigator.clipboard.writeText(clipboard);\n    }\n  }\n\n  render() {\n    var _document$getElementB2, _document$getElementB3;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this._container,\n      style: {\n        position: 'relative',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      ref: this._video,\n      id: \"leftVideo\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      ref: this._overlay,\n      id: 'leftOverlay',\n      tabIndex: 0,\n      style: {\n        width: (_document$getElementB2 = document.getElementById('leftVideo')) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.clientWidth,\n        height: (_document$getElementB3 = document.getElementById('leftVideo')) === null || _document$getElementB3 === void 0 ? void 0 : _document$getElementB3.clientHeight,\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        // disable firefox scrollbars?\n        scrollbarWidth: 'none'\n      },\n      onClick: this.onClick,\n      onContextMenu: this.onContextMenu // onWheel={this.onWheel}\n      ,\n      onMouseMove: this.onMouseMove,\n      onMouseDown: this.onMouseDown,\n      onMouseUp: this.onMouseUp,\n      onMouseEnter: this.onMouseEnter,\n      onMouseLeave: this.onMouseLeave,\n      onKeyDown: this.onKeyDown,\n      onKeyUp: this.onKeyUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test_2/src/components/VBrowser/VBrowser.tsx"],"names":["React","EVENT","NekoClient","VBrowser","Component","focused","fullscreen","activeKeys","Set","controlling","scroll","scroll_invert","width","height","rate","keepAliveInterval","_container","createRef","_overlay","_video","$client","takeControl","connected","sendMessage","ADMIN","CONTROL","once","CONNECTED","changeResolution","resString","split","Number","SCREEN","SET","onFocus","props","navigator","clipboard","readText","text","CLIPBOARD","onBlur","forEach","key","sendData","delete","onClick","e","stopPropagation","preventDefault","onContextMenu","onMousePos","w","h","rect","current","getBoundingClientRect","x","Math","round","clientX","left","y","clientY","top","onWheel","deltaX","deltaY","min","max","onMouseDown","button","onMouseUp","onMouseMove","onMouseEnter","focus","onMouseLeave","blur","getCode","keyCode","onKeyDown","add","onKeyUp","onResize","componentDidMount","window","setInterval","on","DISCONNECTED","login","url","password","username","RESOLUTION","data","setResolution","TRACK","track","stream","video","document","getElementById","src","srcObject","isAutoPlayable","muted","play","onClipboardChanged","process","env","NODE_ENV","console","log","hostname","addEventListener","bind","passive","componentDidUpdate","prevProps","resolution","componentWillUnmount","clearInterval","removeAllListeners","logout","writeText","render","position","clientWidth","clientHeight","bottom","scrollbarWidth"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { EVENT } from './events';\nimport { NekoClient } from '.';\n\n// import { EVENT } from './events';\n\nexport default class VBrowser extends React.Component<{\n  username: string;\n  password: string;\n  hostname: string;\n  controlling: boolean;\n  setLoadingFalse: Function;\n  resolution: string;\n  setResolution: Function;\n  isAutoPlayable: boolean;\n}> {\n  // private observer = new ResizeObserver(this.onResize);\n  private focused = false;\n  private fullscreen = false;\n  private activeKeys: Set<number> = new Set();\n  private controlling = false;\n  private scroll = 1; // 1 to 10\n  private scroll_invert = true;\n  private width = 1280;\n  private height = 720;\n  private rate = 30;\n  private keepAliveInterval = 0;\n  // private _component = React.createRef<HTMLDivElement>();\n  private _container = React.createRef<HTMLDivElement>();\n  private _overlay = React.createRef<HTMLDivElement>();\n  // private _aspect = React.createRef<HTMLDivElement>();\n  // private _player = React.createRef<HTMLDivElement>();\n  private _video = React.createRef<HTMLVideoElement>();\n  // private _resolution = React.createRef<HTMLDivElement>();\n  private $client: NekoClient = new NekoClient();\n\n  componentDidMount() {\n    this.controlling = this.props.controlling;\n    this.keepAliveInterval = window.setInterval(\n      () => this.$client.sendMessage('ka'),\n      10000\n    );\n\n    this.$client.on(EVENT.CONNECTED, () => {\n      if (this.props.controlling) {\n        this.takeControl();\n      }\n    });\n    this.$client.on(EVENT.DISCONNECTED, () => {\n      this.$client.login(url, this.props.password, this.props.username);\n    });\n    this.$client.on(EVENT.SCREEN.RESOLUTION, (data) => {\n      this.width = data.width;\n      this.height = data.height;\n      this.rate = data.rate;\n      // Update our state with the resolution sent from server\n      this.props.setResolution(`${this.width}x${this.height}@${this.rate}`);\n    });\n    this.$client.on(EVENT.TRACK, (track: MediaStreamTrack, stream) => {\n      // console.log(track, streams);\n      const video = document.getElementById('leftVideo') as HTMLVideoElement;\n      video.src = '';\n      video.srcObject = stream;\n      if (!this.props.isAutoPlayable) {\n        video.muted = true;\n      }\n      video.play();\n    });\n    this.$client.on(EVENT.CONTROL.CLIPBOARD, this.onClipboardChanged);\n\n    if (process.env.NODE_ENV === 'development') {\n      this.$client.on('debug', (e, data) => console.log(e, data));\n    }\n\n    const url = 'wss://' + this.props.hostname + '/';\n    this.$client.login(url, this.props.password, this.props.username);\n\n    // this._container.current?.addEventListener('resize', this.onResize);\n    // this.onResize();\n\n    // document.addEventListener('fullscreenchange', () => {\n    //   this.onResize();\n    // });\n\n    document.addEventListener('focusin', this.onFocus.bind(this));\n    document.addEventListener('focusout', this.onBlur.bind(this));\n\n    document\n      .getElementById('leftOverlay')\n      ?.addEventListener('wheel', this.onWheel, { passive: false });\n  }\n\n  componentDidUpdate(prevProps: any) {\n    // console.log(this.props.controlling, prevProps.controlling);\n    this.controlling = this.props.controlling;\n    if (this.props.controlling && !prevProps.controlling) {\n      this.takeControl();\n    }\n    if (this.props.resolution !== prevProps.resolution) {\n      this.changeResolution(this.props.resolution);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.keepAliveInterval);\n    this.$client.removeAllListeners();\n    this.$client.logout();\n  }\n\n  takeControl = () => {\n    if (this.$client.connected) {\n      this.$client.sendMessage(EVENT.ADMIN.CONTROL);\n    } else {\n      this.$client.once(EVENT.CONNECTED, () => {\n        this.$client.sendMessage(EVENT.ADMIN.CONTROL);\n      });\n    }\n  };\n\n  changeResolution = (resString: string) => {\n    const split = resString.split(/x|@/);\n    const width = Number(split[0]);\n    const height = Number(split[1]);\n    const rate = Number(split[2]);\n    this.$client.sendMessage(EVENT.SCREEN.SET, { width, height, rate });\n  };\n\n  onClipboardChanged(clipboard: string) {\n    if (\n      navigator.clipboard &&\n      typeof navigator.clipboard.writeText === 'function'\n    ) {\n      // Received clipboard contents from vbrowser\n      navigator.clipboard.writeText(clipboard);\n    }\n  }\n  onFocus = async () => {\n    if (\n      this.props.controlling &&\n      navigator.clipboard &&\n      typeof navigator.clipboard.readText === 'function'\n    ) {\n      const text = await navigator.clipboard.readText();\n      // console.log('[FOCUS]', text);\n      // send clipboard contents to vbrowser\n      this.$client.sendMessage(EVENT.CONTROL.CLIPBOARD, { text });\n    }\n  };\n\n  onBlur = () => {\n    if (!this.focused || !this.controlling) {\n      return;\n    }\n\n    this.activeKeys.forEach((key) => {\n      this.$client.sendData('keyup', { key });\n      this.activeKeys.delete(key);\n    });\n  };\n\n  onClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  onContextMenu = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  onMousePos = (e: MouseEvent | React.MouseEvent) => {\n    const { w, h } = { w: this.width, h: this.height };\n    const rect = this._overlay.current!.getBoundingClientRect();\n    this.$client.sendData('mousemove', {\n      x: Math.round((w / rect.width) * (e.clientX - rect.left)),\n      y: Math.round((h / rect.height) * (e.clientY - rect.top)),\n    });\n  };\n\n  onWheel = (e: WheelEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    if (!this.controlling) {\n      return;\n    }\n    this.onMousePos(e);\n\n    let x = e.deltaX;\n    let y = e.deltaY;\n\n    if (this.scroll_invert) {\n      x = x * -1;\n      y = y * -1;\n    }\n\n    x = Math.min(Math.max(x, -this.scroll), this.scroll);\n    y = Math.min(Math.max(y, -this.scroll), this.scroll);\n\n    this.$client.sendData('wheel', { x, y });\n  };\n\n  onMouseDown = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    if (!this.controlling) {\n      return;\n    }\n    this.onMousePos(e);\n    this.$client.sendData('mousedown', { key: e.button });\n  };\n\n  onMouseUp = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    if (!this.controlling) {\n      return;\n    }\n    this.onMousePos(e);\n    this.$client.sendData('mouseup', { key: e.button });\n  };\n\n  onMouseMove = (e: React.MouseEvent) => {\n    if (!this.controlling) {\n      return;\n    }\n    this.onMousePos(e);\n  };\n\n  onMouseEnter = (e: React.MouseEvent) => {\n    if (!this.controlling) {\n      return;\n    }\n    this._overlay.current!.focus();\n    this.onFocus();\n    this.focused = true;\n  };\n\n  onMouseLeave = (e: React.MouseEvent) => {\n    if (!this.controlling) {\n      return;\n    }\n    this._overlay.current!.blur();\n    this.focused = false;\n  };\n\n  // frick you firefox\n  getCode = (e: React.KeyboardEvent): number => {\n    let key = e.keyCode;\n    if (key === 59 && (e.key === ';' || e.key === ':')) {\n      key = 186;\n    }\n\n    if (key === 61 && (e.key === '=' || e.key === '+')) {\n      key = 187;\n    }\n\n    if (key === 173 && (e.key === '-' || e.key === '_')) {\n      key = 189;\n    }\n\n    return key;\n  };\n\n  onKeyDown = (e: React.KeyboardEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    if (!this.focused || !this.controlling) {\n      return;\n    }\n\n    let key = this.getCode(e);\n    this.$client.sendData('keydown', { key });\n    this.activeKeys.add(key);\n  };\n\n  onKeyUp = (e: React.KeyboardEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    if (!this.focused || !this.controlling) {\n      return;\n    }\n\n    let key = this.getCode(e);\n    this.$client.sendData('keyup', { key });\n    this.activeKeys.delete(key);\n  };\n\n  onResize = () => {\n    // let height = 0;\n    // if (!this.fullscreen) {\n    //   const offsetWidth = this._component.current?.offsetWidth;\n    //   const offsetHeight = this._component.current?.offsetHeight;\n    //   this._player.current!.style.width = `${offsetWidth}px`;\n    //   this._player.current!.style.height = `${offsetHeight}px`;\n    //   height = offsetHeight as number;\n    // } else {\n    //   const offsetHeight = this._player.current?.offsetHeight;\n    //   height = offsetHeight as number;\n    // }\n    // this._container.current!.style.maxWidth = `${\n    //   (this.horizontal / this.vertical) * height\n    // }px`;\n    // this._aspect.current!.style.paddingBottom = `${\n    //   (this.vertical / this.horizontal) * 100\n    // }%`;\n  };\n\n  render() {\n    return (\n      <div\n        ref={this._container}\n        style={{ position: 'relative', width: '100%' }}\n      >\n        <video ref={this._video} id=\"leftVideo\" style={{ width: '100%' }} />\n        <div\n          ref={this._overlay}\n          id={'leftOverlay'}\n          tabIndex={0}\n          style={{\n            width: document.getElementById('leftVideo')?.clientWidth,\n            height: document.getElementById('leftVideo')?.clientHeight,\n            position: 'absolute',\n            top: 0,\n            bottom: 0,\n            // disable firefox scrollbars?\n            scrollbarWidth: 'none',\n          }}\n          onClick={this.onClick}\n          onContextMenu={this.onContextMenu}\n          // onWheel={this.onWheel}\n          onMouseMove={this.onMouseMove}\n          onMouseDown={this.onMouseDown}\n          onMouseUp={this.onMouseUp}\n          onMouseEnter={this.onMouseEnter}\n          onMouseLeave={this.onMouseLeave}\n          onKeyDown={this.onKeyDown}\n          onKeyUp={this.onKeyUp}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}