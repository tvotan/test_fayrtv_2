{"ast":null,"code":"var _jsxFileName = \"/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test_2/src/components/Modal/LoginModal.tsx\";\nimport React from 'react';\nimport { Modal, Button, Form, Message } from 'semantic-ui-react';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nexport class LoginModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      isCreateMode: false,\n      error: ''\n    };\n\n    this.resetPassword = async () => {\n      try {\n        await firebase.auth().sendPasswordResetEmail(this.state.email);\n        this.props.closeLogin();\n      } catch (e) {\n        // handle exceptions\n        this.setState({\n          error: e.message\n        });\n      }\n    };\n\n    this.emailSignIn = async (email, password) => {\n      try {\n        await firebase.auth().signInWithEmailAndPassword(email, password);\n        this.props.closeLogin();\n      } catch (e) {\n        // handle exceptions\n        this.setState({\n          error: e.message\n        });\n      }\n    };\n\n    this.createAccount = async (email, password) => {\n      try {\n        await firebase.auth().createUserWithEmailAndPassword(email, password);\n      } catch (e) {\n        // handle exceptions\n        this.setState({\n          error: e.message\n        });\n      }\n    };\n\n    this.emailLinkSignIn = async () => {\n      await firebase.auth().sendSignInLinkToEmail(this.state.email, {\n        url: window.location.href,\n        handleCodeInApp: true\n      });\n    };\n  }\n\n  render() {\n    const {\n      closeLogin\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Modal, {\n      open: true,\n      onClose: closeLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, this.state.isCreateMode ? 'Create an account' : 'Login'), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, this.state.error && /*#__PURE__*/React.createElement(Message, {\n      color: \"red\",\n      header: \"Error\",\n      content: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: this.state.password,\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    })), !this.state.isCreateMode && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, \"Don't have an account?\", ' ', /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"linkButton\",\n      onClick: () => this.setState({\n        isCreateMode: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"Create one.\"), ' ', \"Forgot your password? Enter your email and\", ' ', /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"linkButton\",\n      onClick: this.resetPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"reset it.\")), this.state.isCreateMode ? /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      onClick: () => this.createAccount(this.state.email, this.state.password),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, \"Create\") : /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      onClick: () => this.emailSignIn(this.state.email, this.state.password),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, \"Login\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test_2/src/components/Modal/LoginModal.tsx"],"names":["React","Modal","Button","Form","Message","firebase","LoginModal","Component","state","email","password","isCreateMode","error","resetPassword","auth","sendPasswordResetEmail","props","closeLogin","e","setState","message","emailSignIn","signInWithEmailAndPassword","createAccount","createUserWithEmailAndPassword","emailLinkSignIn","sendSignInLinkToEmail","url","window","location","href","handleCodeInApp","render","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Modal, Button, Form, Message } from 'semantic-ui-react';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\n\nexport class LoginModal extends React.Component<{\n  closeLogin: Function;\n}> {\n  public state = { email: '', password: '', isCreateMode: false, error: '' };\n\n  resetPassword = async () => {\n    try {\n      await firebase.auth().sendPasswordResetEmail(this.state.email);\n      this.props.closeLogin();\n    } catch (e) {\n      // handle exceptions\n      this.setState({ error: e.message });\n    }\n  };\n\n  emailSignIn = async (email: string, password: string) => {\n    try {\n      await firebase.auth().signInWithEmailAndPassword(email, password);\n\n      this.props.closeLogin();\n    } catch (e) {\n      // handle exceptions\n      this.setState({ error: e.message });\n    }\n  };\n\n  createAccount = async (email: string, password: string) => {\n    try {\n      await firebase.auth().createUserWithEmailAndPassword(email, password);\n    } catch (e) {\n      // handle exceptions\n      this.setState({ error: e.message });\n    }\n  };\n\n  emailLinkSignIn = async () => {\n    await firebase.auth().sendSignInLinkToEmail(this.state.email, {\n      url: window.location.href,\n      handleCodeInApp: true,\n    });\n  };\n\n  render() {\n    const { closeLogin } = this.props;\n    return (\n      <Modal open={true} onClose={closeLogin as any}>\n        <Modal.Header>\n          {this.state.isCreateMode ? 'Create an account' : 'Login'}\n        </Modal.Header>\n        <Modal.Content>\n          {this.state.error && (\n            <Message color=\"red\" header=\"Error\" content={this.state.error} />\n          )}\n          <Form>\n            <Form.Field>\n              <label>Email</label>\n              <input\n                placeholder=\"Email\"\n                value={this.state.email}\n                onChange={(e) => this.setState({ email: e.target.value })}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Password</label>\n              <input\n                type=\"password\"\n                placeholder=\"Password\"\n                value={this.state.password}\n                onChange={(e) => this.setState({ password: e.target.value })}\n              />\n            </Form.Field>\n            {!this.state.isCreateMode && (\n              <div>\n                Don't have an account?{' '}\n                <button\n                  type=\"button\"\n                  className=\"linkButton\"\n                  onClick={() => this.setState({ isCreateMode: true })}\n                >\n                  Create one.\n                </button>{' '}\n                Forgot your password? Enter your email and{' '}\n                <button\n                  type=\"button\"\n                  className=\"linkButton\"\n                  onClick={this.resetPassword}\n                >\n                  reset it.\n                </button>\n              </div>\n            )}\n            {this.state.isCreateMode ? (\n              <Button\n                type=\"submit\"\n                onClick={() =>\n                  this.createAccount(this.state.email, this.state.password)\n                }\n              >\n                Create\n              </Button>\n            ) : (\n              <Button\n                type=\"submit\"\n                onClick={() =>\n                  this.emailSignIn(this.state.email, this.state.password)\n                }\n              >\n                Login\n              </Button>\n            )}\n          </Form>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}