{"ast":null,"code":"//@ts-ignore\nimport canAutoplay from 'can-autoplay';\nimport { parseStringPromise } from 'xml2js';\nimport { v4 as uuidv4 } from 'uuid';\nexport function formatTimestamp(input) {\n  if (input === null || input === undefined || input === false || Number.isNaN(input) || input === Infinity) {\n    return '';\n  }\n\n  let hours = Math.floor(Number(input) / 3600);\n  let minutes = (Math.floor(Number(input) / 60) % 60).toString().padStart(2, '0');\n  let seconds = Math.floor(Number(input) % 60).toString().padStart(2, '0');\n  return `${hours}:${minutes}:${seconds}`;\n}\nexport function formatSpeed(input) {\n  if (input >= 1000000) {\n    return (input / 1000000).toFixed(2) + ' MiB/s';\n  }\n\n  if (input >= 1000) {\n    return (input / 1000).toFixed(0) + ' KiB/s';\n  }\n\n  return input + ' B/s';\n}\nexport function hashString(input) {\n  var hash = 0,\n      i,\n      chr;\n\n  for (i = 0; i < input.length; i++) {\n    chr = input.charCodeAt(i);\n    hash = (hash << 5) - hash + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return hash;\n}\nlet colorCache = {};\nexport function getColor(id) {\n  let colors = ['red', 'orange', 'yellow', 'olive', 'green', 'teal', 'blue', 'violet', 'purple', 'pink', 'brown', 'grey'];\n\n  if (colorCache[id]) {\n    return colors[colorCache[id]];\n  }\n\n  colorCache[id] = Math.abs(hashString(id)) % colors.length;\n  return colors[colorCache[id]];\n}\nexport function getColorHex(id) {\n  let mappings = {\n    red: 'B03060',\n    orange: 'FE9A76',\n    yellow: 'FFD700',\n    olive: '32CD32',\n    green: '016936',\n    teal: '008080',\n    blue: '0E6EB8',\n    violet: 'EE82EE',\n    purple: 'B413EC',\n    pink: 'FF1493',\n    brown: 'A52A2A',\n    grey: 'A0A0A0',\n    black: '000000'\n  };\n  return mappings[getColor(id)];\n}\nexport const getFbPhoto = fbId => `https://graph.facebook.com/${fbId}/picture?type=normal`;\nexport const getMediaType = input => {\n  if (!input) {\n    return '';\n  }\n\n  if (input.startsWith('https://www.youtube.com/') || input.startsWith('https://youtu.be/')) {\n    return 'youtube';\n  }\n\n  return 'video';\n};\nexport async function testAutoplay() {\n  const result = await canAutoplay.video();\n  return result.result;\n}\nexport function decodeEntities(input) {\n  const doc = new DOMParser().parseFromString(input, 'text/html');\n  return doc.documentElement.textContent;\n} // Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n\nexport function debounce(func, wait, immediate) {\n  var timeout; // This is the function that is actually executed when\n  // the DOM event is triggered.\n\n  return function executedFunction() {\n    // Store the context of this and any\n    // parameters passed to executedFunction\n    //@ts-ignore\n    var context = this;\n    var args = arguments; // The function to be called after\n    // the debounce time has elapsed\n\n    var later = function () {\n      // null timeout to indicate the debounce ended\n      timeout = null; // Call function now if you did not on the leading end\n\n      if (!immediate) func.apply(context, args);\n    }; // Determine if you should call the function\n    // on the leading or trail end\n\n\n    var callNow = immediate && !timeout; // This will reset the waiting every function execution.\n    // This is the step that prevents the function from\n    // being executed because it will never reach the\n    // inside of the previous setTimeout\n\n    clearTimeout(timeout); // Restart the debounce waiting period.\n    // setTimeout returns a truthy value (it differs in web vs node)\n\n    timeout = setTimeout(later, wait); // Call immediately if you're dong a leading\n    // end execution\n\n    if (callNow) func.apply(context, args);\n  };\n}\nexport const getMediaPathForList = list => {\n  if (list.startsWith('https://gitlab.com/')) {\n    const match = list.match(/https:\\/\\/gitlab.com\\/api\\/v4\\/projects\\/(.*)\\/repository\\/tree/);\n    const name = match && match[1];\n    const decoded = decodeURIComponent(name || '');\n    return `https://glcdn.githack.com/${decoded}/-/raw/master/`;\n  } // Nginx servers use the same mediapath as list, add trailing /\n\n\n  return list + '/';\n};\nexport const getDefaultPicture = (name, background = 'a0a0a0') => {\n  return `https://ui-avatars.com/api/?name=${name}&background=${background}&size=256&color=ffffff`;\n};\nexport const isMobile = () => {\n  return window.screen.width <= 600;\n};\nexport function shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * i);\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n}\nexport const iceServers = () => [{\n  urls: 'stun:stun.l.google.com:19302'\n}, // { urls: 'turn:13.66.162.252:3478', username: 'username', credential: 'password' },\n{\n  urls: 'turn:212.47.251.184:3478',\n  username: 'username',\n  credential: 'password'\n}, {\n  urls: 'turn:numb.viagenie.ca',\n  credential: 'watchparty',\n  username: 'howardzchung@gmail.com'\n}];\nexport const serverPath = process.env.REACT_APP_SERVER_HOST || `${window.location.protocol}//${window.location.hostname}${process.env.NODE_ENV === 'production' ? '' : ':8080'}`;\nexport async function getMediaPathResults(mediaPath, query) {\n  // Get media list if provided\n  const response = await window.fetch(mediaPath);\n  let results = [];\n\n  if (mediaPath.includes('s3.')) {\n    // S3-style buckets return data in XML\n    const xml = await response.text();\n    const data = await parseStringPromise(xml);\n    let filtered = data.ListBucketResult.Contents.filter(file => !file.Key[0].includes('/'));\n    results = filtered.map(file => ({\n      url: mediaPath + '/' + file.Key[0],\n      name: mediaPath + '/' + file.Key[0]\n    }));\n  } else {\n    const data = await response.json();\n    results = data.filter(file => file.type === 'file').map(file => ({\n      url: file.url || getMediaPathForList(mediaPath) + file.name,\n      name: getMediaPathForList(mediaPath) + file.name\n    }));\n  }\n\n  results = results.filter(option => option.name.toLowerCase().includes(query.toLowerCase()));\n  return results;\n}\nexport async function getStreamPathResults(streamPath, query) {\n  const response = await window.fetch(streamPath + '/search?q=' + encodeURIComponent(query));\n  const data = await response.json();\n  return data;\n}\nexport async function getYouTubeResults(query) {\n  const response = await window.fetch(serverPath + '/youtube?q=' + encodeURIComponent(query));\n  const data = await response.json();\n  return data;\n}\nexport async function openFileSelector(accept) {\n  return new Promise(resolve => {\n    // Create an input element\n    const inputElement = document.createElement('input'); // Set its type to file\n\n    inputElement.type = 'file'; // Set accept to the file types you want the user to select.\n    // Include both the file extension and the mime type\n\n    if (accept) {\n      inputElement.accept = accept;\n    } // set onchange event to call callback when user has selected file\n\n\n    inputElement.addEventListener('change', () => {\n      resolve(inputElement.files);\n    }); // dispatch a click event to open the file dialog\n\n    inputElement.dispatchEvent(new MouseEvent('click'));\n  });\n}\nexport function getAndSaveClientId() {\n  let clientId = window.localStorage.getItem('watchparty-clientid');\n\n  if (!clientId) {\n    // Generate a new clientID and save it\n    clientId = uuidv4();\n    window.localStorage.setItem('watchparty-clientid', clientId);\n  }\n\n  return clientId;\n}","map":{"version":3,"sources":["/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test_2/src/utils/index.ts"],"names":["canAutoplay","parseStringPromise","v4","uuidv4","formatTimestamp","input","undefined","Number","isNaN","Infinity","hours","Math","floor","minutes","toString","padStart","seconds","formatSpeed","toFixed","hashString","hash","i","chr","length","charCodeAt","colorCache","getColor","id","colors","abs","getColorHex","mappings","red","orange","yellow","olive","green","teal","blue","violet","purple","pink","brown","grey","black","getFbPhoto","fbId","getMediaType","startsWith","testAutoplay","result","video","decodeEntities","doc","DOMParser","parseFromString","documentElement","textContent","debounce","func","wait","immediate","timeout","executedFunction","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","getMediaPathForList","list","match","name","decoded","decodeURIComponent","getDefaultPicture","background","isMobile","window","screen","width","shuffle","array","j","random","temp","iceServers","urls","username","credential","serverPath","process","env","REACT_APP_SERVER_HOST","location","protocol","hostname","NODE_ENV","getMediaPathResults","mediaPath","query","response","fetch","results","includes","xml","text","data","filtered","ListBucketResult","Contents","filter","file","Key","map","url","json","type","option","toLowerCase","getStreamPathResults","streamPath","encodeURIComponent","getYouTubeResults","openFileSelector","accept","Promise","resolve","inputElement","document","createElement","addEventListener","files","dispatchEvent","MouseEvent","getAndSaveClientId","clientId","localStorage","getItem","setItem"],"mappings":"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","sourcesContent":["//@ts-ignore\nimport canAutoplay from 'can-autoplay';\nimport { parseStringPromise } from 'xml2js';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport function formatTimestamp(input: any) {\n  if (\n    input === null ||\n    input === undefined ||\n    input === false ||\n    Number.isNaN(input) ||\n    input === Infinity\n  ) {\n    return '';\n  }\n  let hours = Math.floor(Number(input) / 3600);\n  let minutes = (Math.floor(Number(input) / 60) % 60)\n    .toString()\n    .padStart(2, '0');\n  let seconds = Math.floor(Number(input) % 60)\n    .toString()\n    .padStart(2, '0');\n  return `${hours}:${minutes}:${seconds}`;\n}\n\nexport function formatSpeed(input: number) {\n  if (input >= 1000000) {\n    return (input / 1000000).toFixed(2) + ' MiB/s';\n  }\n  if (input >= 1000) {\n    return (input / 1000).toFixed(0) + ' KiB/s';\n  }\n  return input + ' B/s';\n}\n\nexport function hashString(input: string) {\n  var hash = 0,\n    i,\n    chr;\n  for (i = 0; i < input.length; i++) {\n    chr = input.charCodeAt(i);\n    hash = (hash << 5) - hash + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n}\n\nlet colorCache = {} as NumberDict;\nexport function getColor(id: string) {\n  let colors = [\n    'red',\n    'orange',\n    'yellow',\n    'olive',\n    'green',\n    'teal',\n    'blue',\n    'violet',\n    'purple',\n    'pink',\n    'brown',\n    'grey',\n  ];\n  if (colorCache[id]) {\n    return colors[colorCache[id]];\n  }\n  colorCache[id] = Math.abs(hashString(id)) % colors.length;\n  return colors[colorCache[id]];\n}\n\nexport function getColorHex(id: string) {\n  let mappings: StringDict = {\n    red: 'B03060',\n    orange: 'FE9A76',\n    yellow: 'FFD700',\n    olive: '32CD32',\n    green: '016936',\n    teal: '008080',\n    blue: '0E6EB8',\n    violet: 'EE82EE',\n    purple: 'B413EC',\n    pink: 'FF1493',\n    brown: 'A52A2A',\n    grey: 'A0A0A0',\n    black: '000000',\n  };\n  return mappings[getColor(id)];\n}\n\nexport const getFbPhoto = (fbId: string) =>\n  `https://graph.facebook.com/${fbId}/picture?type=normal`;\n\nexport const getMediaType = (input: string) => {\n  if (!input) {\n    return '';\n  }\n  if (\n    input.startsWith('https://www.youtube.com/') ||\n    input.startsWith('https://youtu.be/')\n  ) {\n    return 'youtube';\n  }\n  return 'video';\n};\n\nexport async function testAutoplay() {\n  const result = await canAutoplay.video();\n  return result.result;\n}\n\nexport function decodeEntities(input: string) {\n  const doc = new DOMParser().parseFromString(input, 'text/html');\n  return doc.documentElement.textContent;\n}\n\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\nexport function debounce(func: Function, wait: number, immediate?: boolean) {\n  var timeout: any;\n\n  // This is the function that is actually executed when\n  // the DOM event is triggered.\n  return function executedFunction() {\n    // Store the context of this and any\n    // parameters passed to executedFunction\n    //@ts-ignore\n    var context = this;\n    var args = arguments;\n\n    // The function to be called after\n    // the debounce time has elapsed\n    var later = function () {\n      // null timeout to indicate the debounce ended\n      timeout = null;\n\n      // Call function now if you did not on the leading end\n      if (!immediate) func.apply(context, args);\n    };\n\n    // Determine if you should call the function\n    // on the leading or trail end\n    var callNow = immediate && !timeout;\n\n    // This will reset the waiting every function execution.\n    // This is the step that prevents the function from\n    // being executed because it will never reach the\n    // inside of the previous setTimeout\n    clearTimeout(timeout);\n\n    // Restart the debounce waiting period.\n    // setTimeout returns a truthy value (it differs in web vs node)\n    timeout = setTimeout(later, wait);\n\n    // Call immediately if you're dong a leading\n    // end execution\n    if (callNow) func.apply(context, args);\n  };\n}\n\nexport const getMediaPathForList = (list: string) => {\n  if (list.startsWith('https://gitlab.com/')) {\n    const match = list.match(\n      /https:\\/\\/gitlab.com\\/api\\/v4\\/projects\\/(.*)\\/repository\\/tree/\n    );\n    const name = match && match[1];\n    const decoded = decodeURIComponent(name || '');\n    return `https://glcdn.githack.com/${decoded}/-/raw/master/`;\n  }\n  // Nginx servers use the same mediapath as list, add trailing /\n  return list + '/';\n};\n\nexport const getDefaultPicture = (name: string, background = 'a0a0a0') => {\n  return `https://ui-avatars.com/api/?name=${name}&background=${background}&size=256&color=ffffff`;\n};\n\nexport const isMobile = () => {\n  return window.screen.width <= 600;\n};\n\nexport function shuffle(array: any[]) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * i);\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n}\n\nexport const iceServers = () => [\n  { urls: 'stun:stun.l.google.com:19302' },\n  // { urls: 'turn:13.66.162.252:3478', username: 'username', credential: 'password' },\n  {\n    urls: 'turn:212.47.251.184:3478',\n    username: 'username',\n    credential: 'password',\n  },\n  {\n    urls: 'turn:numb.viagenie.ca',\n    credential: 'watchparty',\n    username: 'howardzchung@gmail.com',\n  },\n];\n\nexport const serverPath =\n  process.env.REACT_APP_SERVER_HOST ||\n  `${window.location.protocol}//${window.location.hostname}${\n    process.env.NODE_ENV === 'production' ? '' : ':8080'\n  }`;\n\nexport async function getMediaPathResults(\n  mediaPath: string,\n  query: string\n): Promise<SearchResult[]> {\n  // Get media list if provided\n  const response = await window.fetch(mediaPath);\n  let results: SearchResult[] = [];\n  if (mediaPath.includes('s3.')) {\n    // S3-style buckets return data in XML\n    const xml = await response.text();\n    const data = await parseStringPromise(xml);\n    let filtered = data.ListBucketResult.Contents.filter(\n      (file: any) => !file.Key[0].includes('/')\n    );\n    results = filtered.map((file: any) => ({\n      url: mediaPath + '/' + file.Key[0],\n      name: mediaPath + '/' + file.Key[0],\n    }));\n  } else {\n    const data = await response.json();\n    results = data\n      .filter((file: any) => file.type === 'file')\n      .map((file: any) => ({\n        url: file.url || getMediaPathForList(mediaPath) + file.name,\n        name: getMediaPathForList(mediaPath) + file.name,\n      }));\n  }\n  results = results.filter((option: SearchResult) =>\n    option.name.toLowerCase().includes(query.toLowerCase())\n  );\n  return results;\n}\n\nexport async function getStreamPathResults(\n  streamPath: string,\n  query: string\n): Promise<SearchResult[]> {\n  const response = await window.fetch(\n    streamPath + '/search?q=' + encodeURIComponent(query)\n  );\n  const data = await response.json();\n  return data;\n}\n\nexport async function getYouTubeResults(\n  query: string\n): Promise<SearchResult[]> {\n  const response = await window.fetch(\n    serverPath + '/youtube?q=' + encodeURIComponent(query)\n  );\n  const data = await response.json();\n  return data;\n}\n\nexport async function openFileSelector(accept?: string) {\n  return new Promise<FileList | null>((resolve) => {\n    // Create an input element\n    const inputElement = document.createElement('input');\n\n    // Set its type to file\n    inputElement.type = 'file';\n\n    // Set accept to the file types you want the user to select.\n    // Include both the file extension and the mime type\n    if (accept) {\n      inputElement.accept = accept;\n    }\n\n    // set onchange event to call callback when user has selected file\n    inputElement.addEventListener('change', () => {\n      resolve(inputElement.files);\n    });\n\n    // dispatch a click event to open the file dialog\n    inputElement.dispatchEvent(new MouseEvent('click'));\n  });\n}\n\nexport function getAndSaveClientId() {\n  let clientId = window.localStorage.getItem('watchparty-clientid');\n  if (!clientId) {\n    // Generate a new clientID and save it\n    clientId = uuidv4();\n    window.localStorage.setItem('watchparty-clientid', clientId);\n  }\n  return clientId;\n}\n"]},"metadata":{},"sourceType":"module"}