{"ast":null,"code":"var _jsxFileName = \"/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test_2/src/components/Controls/Controls.tsx\";\nimport React from 'react';\nimport { Icon, Progress, Label, Popup } from 'semantic-ui-react';\nimport { Slider } from 'react-semantic-ui-range';\nimport { formatTimestamp } from '../../utils';\n// TODO a lot of this state is currently tied to the per-second tsMap update, which is leading to some UI lag\n// Should probably have local state tracking CC/mute/time etc.\nexport class Controls extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showTimestamp: false,\n      currTimestamp: 0,\n      posTimestamp: 0\n    };\n\n    this.onMouseOver = () => {\n      // console.log('mouseover');\n      this.setState({\n        showTimestamp: true\n      });\n    };\n\n    this.onMouseOut = () => {\n      // console.log('mouseout');\n      this.setState({\n        showTimestamp: false\n      });\n    };\n\n    this.onMouseMove = e => {\n      const rect = e.target.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const max = rect.width;\n      const pct = x / max; // console.log(x, max);\n\n      const target = pct * this.props.duration; // console.log(pct);\n\n      if (pct >= 0) {\n        this.setState({\n          currTimestamp: target,\n          posTimestamp: pct\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      togglePlay,\n      onSeek,\n      fullScreen,\n      toggleMute,\n      toggleSubtitle,\n      jumpToLeader,\n      paused,\n      muted,\n      subtitled,\n      currentTime,\n      duration,\n      leaderTime\n    } = this.props;\n    const isBehind = leaderTime && leaderTime - currentTime > 5;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      size: \"large\",\n      onClick: togglePlay,\n      className: \"control action\",\n      disabled: this.props.disabled,\n      name: paused ? 'play' : 'pause',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Popup, {\n      content: (isBehind ? \"We've detected that your stream is behind. \" : '') + 'Click to sync to leader.',\n      trigger: /*#__PURE__*/React.createElement(Icon, {\n        size: \"large\",\n        onClick: jumpToLeader,\n        className: `control action ${isBehind ? 'glowing' : ''}`,\n        name: 'angle double right',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, formatTimestamp(currentTime)), /*#__PURE__*/React.createElement(Progress, {\n      size: \"tiny\",\n      color: \"blue\",\n      onClick: duration < Infinity && !this.props.disabled ? onSeek : undefined,\n      onMouseOver: this.onMouseOver,\n      onMouseOut: this.onMouseOut,\n      onMouseMove: this.onMouseMove,\n      className: \"control action\",\n      inverted: true,\n      style: {\n        flexGrow: 1,\n        marginTop: 0,\n        marginBottom: 0,\n        position: 'relative',\n        minWidth: '100px'\n      },\n      value: currentTime,\n      total: duration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, duration < Infinity && this.state.showTimestamp && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        bottom: '0px',\n        left: `calc(${this.state.posTimestamp * 100 + '% - 27px'})`,\n        pointerEvents: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      basic: true,\n      color: \"blue\",\n      pointing: \"below\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '34px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, formatTimestamp(this.state.currTimestamp))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, formatTimestamp(duration)), /*#__PURE__*/React.createElement(Icon, {\n      size: \"large\",\n      onClick: toggleSubtitle,\n      className: \"control action\",\n      name: subtitled ? 'closed captioning' : 'closed captioning outline',\n      title: \"Captions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Icon, {\n      size: \"large\",\n      onClick: () => fullScreen(false),\n      className: \"control action\",\n      name: \"window maximize outline\",\n      title: \"Theater Mode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Icon, {\n      size: \"large\",\n      onClick: () => fullScreen(true),\n      className: \"control action\",\n      name: \"expand\",\n      title: \"Fullscreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Icon, {\n      size: \"large\",\n      onClick: toggleMute,\n      className: \"control action\",\n      name: muted ? 'volume off' : 'volume up',\n      title: \"Mute\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100px',\n        marginRight: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Slider, {\n      value: this.props.getVolume(),\n      color: \"blue\",\n      settings: {\n        min: 0,\n        max: 1,\n        step: 0.01,\n        onChange: value => {\n          this.props.setVolume(value);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test_2/src/components/Controls/Controls.tsx"],"names":["React","Icon","Progress","Label","Popup","Slider","formatTimestamp","Controls","Component","state","showTimestamp","currTimestamp","posTimestamp","onMouseOver","setState","onMouseOut","onMouseMove","e","rect","target","getBoundingClientRect","x","clientX","left","max","width","pct","props","duration","render","togglePlay","onSeek","fullScreen","toggleMute","toggleSubtitle","jumpToLeader","paused","muted","subtitled","currentTime","leaderTime","isBehind","disabled","Infinity","undefined","flexGrow","marginTop","marginBottom","position","minWidth","bottom","pointerEvents","marginRight","getVolume","min","step","onChange","value","setVolume"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Icon, Progress, Label, Popup } from 'semantic-ui-react';\nimport { Slider } from 'react-semantic-ui-range';\nimport { formatTimestamp } from '../../utils';\n\ninterface ControlsProps {\n  duration: number;\n  togglePlay: Function;\n  onSeek: Function;\n  fullScreen: Function;\n  toggleMute: Function;\n  toggleSubtitle: Function;\n  jumpToLeader: Function;\n  paused: boolean;\n  muted: boolean;\n  subtitled: boolean;\n  currentTime: number;\n  getVolume: Function;\n  setVolume: Function;\n  disabled?: boolean;\n  leaderTime?: number;\n}\n\n// TODO a lot of this state is currently tied to the per-second tsMap update, which is leading to some UI lag\n// Should probably have local state tracking CC/mute/time etc.\nexport class Controls extends React.Component<ControlsProps> {\n  state = {\n    showTimestamp: false,\n    currTimestamp: 0,\n    posTimestamp: 0,\n  };\n\n  onMouseOver = () => {\n    // console.log('mouseover');\n    this.setState({ showTimestamp: true });\n  };\n\n  onMouseOut = () => {\n    // console.log('mouseout');\n    this.setState({ showTimestamp: false });\n  };\n\n  onMouseMove = (e: any) => {\n    const rect = e.target.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const max = rect.width;\n    const pct = x / max;\n    // console.log(x, max);\n    const target = pct * this.props.duration;\n    // console.log(pct);\n    if (pct >= 0) {\n      this.setState({ currTimestamp: target, posTimestamp: pct });\n    }\n  };\n\n  render() {\n    const {\n      togglePlay,\n      onSeek,\n      fullScreen,\n      toggleMute,\n      toggleSubtitle,\n      jumpToLeader,\n      paused,\n      muted,\n      subtitled,\n      currentTime,\n      duration,\n      leaderTime,\n    } = this.props;\n    const isBehind = leaderTime && leaderTime - currentTime > 5;\n    return (\n      <div className=\"controls\">\n        <Icon\n          size=\"large\"\n          onClick={togglePlay}\n          className=\"control action\"\n          disabled={this.props.disabled}\n          name={paused ? 'play' : 'pause'}\n        />\n        <Popup\n          content={\n            (isBehind ? \"We've detected that your stream is behind. \" : '') +\n            'Click to sync to leader.'\n          }\n          trigger={\n            <Icon\n              size=\"large\"\n              onClick={jumpToLeader}\n              className={`control action ${isBehind ? 'glowing' : ''}`}\n              name={'angle double right'}\n            />\n          }\n        />\n        <div className=\"control\">{formatTimestamp(currentTime)}</div>\n        <Progress\n          size=\"tiny\"\n          color=\"blue\"\n          onClick={\n            duration < Infinity && !this.props.disabled ? onSeek : undefined\n          }\n          onMouseOver={this.onMouseOver}\n          onMouseOut={this.onMouseOut}\n          onMouseMove={this.onMouseMove}\n          className=\"control action\"\n          inverted\n          style={{\n            flexGrow: 1,\n            marginTop: 0,\n            marginBottom: 0,\n            position: 'relative',\n            minWidth: '100px',\n          }}\n          value={currentTime}\n          total={duration}\n        >\n          {duration < Infinity && this.state.showTimestamp && (\n            <div\n              style={{\n                position: 'absolute',\n                bottom: '0px',\n                left: `calc(${this.state.posTimestamp * 100 + '% - 27px'})`,\n                pointerEvents: 'none',\n              }}\n            >\n              <Label basic color=\"blue\" pointing=\"below\">\n                <div style={{ width: '34px' }}>\n                  {formatTimestamp(this.state.currTimestamp)}\n                </div>\n              </Label>\n            </div>\n          )}\n        </Progress>\n        <div className=\"control\">{formatTimestamp(duration)}</div>\n        <Icon\n          size=\"large\"\n          onClick={toggleSubtitle}\n          className=\"control action\"\n          name={subtitled ? 'closed captioning' : 'closed captioning outline'}\n          title=\"Captions\"\n        />\n        <Icon\n          size=\"large\"\n          onClick={() => fullScreen(false)}\n          className=\"control action\"\n          name=\"window maximize outline\"\n          title=\"Theater Mode\"\n        />\n        <Icon\n          size=\"large\"\n          onClick={() => fullScreen(true)}\n          className=\"control action\"\n          name=\"expand\"\n          title=\"Fullscreen\"\n        />\n        <Icon\n          size=\"large\"\n          onClick={toggleMute}\n          className=\"control action\"\n          name={muted ? 'volume off' : 'volume up'}\n          title=\"Mute\"\n        />\n        <div style={{ width: '100px', marginRight: '10px' }}>\n          <Slider\n            value={this.props.getVolume()}\n            color=\"blue\"\n            settings={{\n              min: 0,\n              max: 1,\n              step: 0.01,\n              onChange: (value: number) => {\n                this.props.setVolume(value);\n              },\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}