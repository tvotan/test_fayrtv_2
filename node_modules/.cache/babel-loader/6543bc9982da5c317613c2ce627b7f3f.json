{"ast":null,"code":"var _jsxFileName = \"/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test_2/src/components/Chat/Chat.tsx\";\nimport React from 'react';\nimport { Button, Comment, Icon, Input } from 'semantic-ui-react';\nimport 'emoji-mart/css/emoji-mart.css';\nimport { Picker } from 'emoji-mart';\nimport onClickOutside from 'react-onclickoutside';\nimport { formatTimestamp, getColorHex, getDefaultPicture } from '../../utils';\nimport { Separator } from '../App/App';\nexport class Chat extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chatMsg: '',\n      isNearBottom: true,\n      isPickerOpen: false\n    };\n    this.messagesRef = React.createRef();\n\n    this.updateChatMsg = (e, data) => {\n      // console.log(e.target.selectionStart);\n      this.setState({\n        chatMsg: data.value\n      });\n    };\n\n    this.sendChatMsg = () => {\n      if (!this.state.chatMsg) {\n        return;\n      }\n\n      if (this.chatTooLong()) {\n        return;\n      }\n\n      this.setState({\n        chatMsg: ''\n      });\n      this.props.socket.emit('CMD:chat', this.state.chatMsg);\n    };\n\n    this.chatTooLong = () => {\n      var _this$state$chatMsg;\n\n      return Boolean(((_this$state$chatMsg = this.state.chatMsg) === null || _this$state$chatMsg === void 0 ? void 0 : _this$state$chatMsg.length) > 10000);\n    };\n\n    this.onScroll = () => {\n      this.setState({\n        isNearBottom: this.isChatNearBottom()\n      });\n    };\n\n    this.isChatNearBottom = () => {\n      return this.messagesRef.current && this.messagesRef.current.scrollHeight - this.messagesRef.current.scrollTop - this.messagesRef.current.offsetHeight < 100;\n    };\n\n    this.scrollToBottom = () => {\n      if (this.messagesRef.current) {\n        this.messagesRef.current.scrollTop = this.messagesRef.current.scrollHeight;\n      }\n    };\n\n    this.formatMessage = (cmd, msg) => {\n      if (cmd === 'host') {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 9\n          }\n        }, `changed the video to `, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            textTransform: 'initial'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }\n        }, this.props.getMediaDisplayName(msg)));\n      } else if (cmd === 'seek') {\n        return `jumped to ${formatTimestamp(msg)}`;\n      } else if (cmd === 'play') {\n        return `started the video at ${formatTimestamp(msg)}`;\n      } else if (cmd === 'pause') {\n        return `paused the video at ${formatTimestamp(msg)}`;\n      } else if (cmd === 'lock') {\n        return `locked the room`;\n      } else if (cmd === 'unlock') {\n        return 'unlocked the room';\n      } else if (cmd === 'vBrowserTimeout') {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 9\n          }\n        }, \"The VBrowser shut down automatically.\", /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }\n        }), \"Subscribe for sessions up to 12 hours.\");\n      } else if (cmd === 'vBrowserAlmostTimeout') {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 9\n          }\n        }, \"The VBrowser will shut down soon.\", /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }\n        }), \"Subscribe for sessions up to 12 hours.\");\n      }\n\n      return cmd;\n    };\n\n    this.addEmoji = emoji => {\n      this.setState({\n        chatMsg: this.state.chatMsg + emoji.native\n      });\n    };\n  }\n\n  componentDidMount() {\n    var _this$messagesRef$cur;\n\n    this.scrollToBottom();\n    (_this$messagesRef$cur = this.messagesRef.current) === null || _this$messagesRef$cur === void 0 ? void 0 : _this$messagesRef$cur.addEventListener('scroll', this.onScroll);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.scrollTimestamp !== prevProps.scrollTimestamp) {\n      if (prevProps.scrollTimestamp === 0 || this.state.isNearBottom) {\n        this.scrollToBottom();\n      }\n    }\n\n    if (this.props.hide !== prevProps.hide) {\n      this.scrollToBottom();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: this.props.className,\n      style: {\n        display: this.props.hide ? 'none' : 'flex',\n        flexDirection: 'column',\n        flexGrow: 1,\n        minHeight: 0,\n        marginTop: 0,\n        marginBottom: 0,\n        padding: '8px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatContainer\",\n      ref: this.messagesRef,\n      style: {\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, this.props.chat.map(msg => /*#__PURE__*/React.createElement(ChatMessage, {\n      key: msg.timestamp + msg.id,\n      message: msg,\n      pictureMap: this.props.pictureMap,\n      nameMap: this.props.nameMap,\n      formatMessage: this.formatMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }))), !this.state.isNearBottom && /*#__PURE__*/React.createElement(Button, {\n      size: \"tiny\",\n      onClick: this.scrollToBottom,\n      style: {\n        position: 'sticky',\n        bottom: 0,\n        display: 'block',\n        margin: '0 auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, \"Jump to bottom\")), /*#__PURE__*/React.createElement(Separator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }), this.state.isPickerOpen && /*#__PURE__*/React.createElement(PickerMenu, {\n      addEmoji: this.addEmoji,\n      closeMenu: () => this.setState({\n        isPickerOpen: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      inverted: true,\n      fluid: true,\n      onKeyPress: e => e.key === 'Enter' && this.sendChatMsg(),\n      onChange: this.updateChatMsg,\n      value: this.state.chatMsg,\n      error: this.chatTooLong(),\n      icon: true,\n      placeholder: \"Enter a message...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Icon // style={{ right: '40px' }}\n    , {\n      onClick: () => this.setState({\n        isPickerOpen: true\n      }),\n      name: '',\n      inverted: true,\n      circular: true,\n      link: true,\n      style: {\n        opacity: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"Emoji\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, \"\\uD83D\\uDE00\"))));\n  }\n\n}\n\nconst ChatMessage = ({\n  message,\n  nameMap,\n  pictureMap,\n  formatMessage\n}) => {\n  const {\n    id,\n    timestamp,\n    cmd,\n    msg,\n    system\n  } = message;\n  return /*#__PURE__*/React.createElement(Comment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }\n  }, id ? /*#__PURE__*/React.createElement(Comment.Avatar, {\n    src: pictureMap[id] || getDefaultPicture(nameMap[id], getColorHex(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }) : null, /*#__PURE__*/React.createElement(Comment.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Comment.Author, {\n    as: \"a\",\n    className: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }, Boolean(system) && 'System', nameMap[id] || id), /*#__PURE__*/React.createElement(Comment.Metadata, {\n    className: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, new Date(timestamp).toLocaleTimeString())), /*#__PURE__*/React.createElement(Comment.Text, {\n    className: \"light system\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, cmd && formatMessage(cmd, msg)), /*#__PURE__*/React.createElement(Comment.Text, {\n    className: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }\n  }, !cmd && msg)));\n};\n\nclass PickerMenuInner extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClickOutside = () => {\n      this.props.closeMenu();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        bottom: '60px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Picker, {\n      set: \"google\",\n      sheetSize: 64,\n      theme: \"dark\",\n      showPreview: false,\n      showSkinTones: false,\n      onSelect: this.props.addEmoji,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst PickerMenu = onClickOutside(PickerMenuInner);","map":{"version":3,"sources":["/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test_2/src/components/Chat/Chat.tsx"],"names":["React","Button","Comment","Icon","Input","Picker","onClickOutside","formatTimestamp","getColorHex","getDefaultPicture","Separator","Chat","Component","state","chatMsg","isNearBottom","isPickerOpen","messagesRef","createRef","updateChatMsg","e","data","setState","value","sendChatMsg","chatTooLong","props","socket","emit","Boolean","length","onScroll","isChatNearBottom","current","scrollHeight","scrollTop","offsetHeight","scrollToBottom","formatMessage","cmd","msg","textTransform","getMediaDisplayName","addEmoji","emoji","native","componentDidMount","addEventListener","componentDidUpdate","prevProps","scrollTimestamp","hide","render","className","display","flexDirection","flexGrow","minHeight","marginTop","marginBottom","padding","position","chat","map","timestamp","id","pictureMap","nameMap","bottom","margin","key","opacity","ChatMessage","message","system","Date","toLocaleTimeString","PickerMenuInner","handleClickOutside","closeMenu","PickerMenu"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Comment, Icon, Input } from 'semantic-ui-react';\nimport { Socket } from 'socket.io';\nimport 'emoji-mart/css/emoji-mart.css';\nimport { EmojiData, Picker } from 'emoji-mart';\nimport onClickOutside from 'react-onclickoutside';\n\nimport { formatTimestamp, getColorHex, getDefaultPicture } from '../../utils';\nimport { Separator } from '../App/App';\n\ninterface ChatProps {\n  chat: ChatMessage[];\n  nameMap: StringDict;\n  pictureMap: StringDict;\n  socket: Socket;\n  scrollTimestamp: number;\n  className?: string;\n  getMediaDisplayName: Function;\n  hide?: boolean;\n}\n\nexport class Chat extends React.Component<ChatProps> {\n  public state = { chatMsg: '', isNearBottom: true, isPickerOpen: false };\n  messagesRef = React.createRef<HTMLDivElement>();\n\n  componentDidMount() {\n    this.scrollToBottom();\n    this.messagesRef.current?.addEventListener('scroll', this.onScroll);\n  }\n\n  componentDidUpdate(prevProps: ChatProps) {\n    if (this.props.scrollTimestamp !== prevProps.scrollTimestamp) {\n      if (prevProps.scrollTimestamp === 0 || this.state.isNearBottom) {\n        this.scrollToBottom();\n      }\n    }\n    if (this.props.hide !== prevProps.hide) {\n      this.scrollToBottom();\n    }\n  }\n\n  updateChatMsg = (e: any, data: { value: string }) => {\n    // console.log(e.target.selectionStart);\n    this.setState({ chatMsg: data.value });\n  };\n\n  sendChatMsg = () => {\n    if (!this.state.chatMsg) {\n      return;\n    }\n    if (this.chatTooLong()) {\n      return;\n    }\n    this.setState({ chatMsg: '' });\n    this.props.socket.emit('CMD:chat', this.state.chatMsg);\n  };\n\n  chatTooLong = () => {\n    return Boolean(this.state.chatMsg?.length > 10000);\n  };\n\n  onScroll = () => {\n    this.setState({ isNearBottom: this.isChatNearBottom() });\n  };\n\n  isChatNearBottom = () => {\n    return (\n      this.messagesRef.current &&\n      this.messagesRef.current.scrollHeight -\n        this.messagesRef.current.scrollTop -\n        this.messagesRef.current.offsetHeight <\n        100\n    );\n  };\n\n  scrollToBottom = () => {\n    if (this.messagesRef.current) {\n      this.messagesRef.current.scrollTop = this.messagesRef.current.scrollHeight;\n    }\n  };\n\n  formatMessage = (cmd: string, msg: string): React.ReactNode | string => {\n    if (cmd === 'host') {\n      return (\n        <React.Fragment>\n          {`changed the video to `}\n          <span style={{ textTransform: 'initial' }}>\n            {this.props.getMediaDisplayName(msg)}\n          </span>\n        </React.Fragment>\n      );\n    } else if (cmd === 'seek') {\n      return `jumped to ${formatTimestamp(msg)}`;\n    } else if (cmd === 'play') {\n      return `started the video at ${formatTimestamp(msg)}`;\n    } else if (cmd === 'pause') {\n      return `paused the video at ${formatTimestamp(msg)}`;\n    } else if (cmd === 'lock') {\n      return `locked the room`;\n    } else if (cmd === 'unlock') {\n      return 'unlocked the room';\n    } else if (cmd === 'vBrowserTimeout') {\n      return (\n        <React.Fragment>\n          The VBrowser shut down automatically.\n          <br />\n          Subscribe for sessions up to 12 hours.\n        </React.Fragment>\n      );\n    } else if (cmd === 'vBrowserAlmostTimeout') {\n      return (\n        <React.Fragment>\n          The VBrowser will shut down soon.\n          <br />\n          Subscribe for sessions up to 12 hours.\n        </React.Fragment>\n      );\n    }\n    return cmd;\n  };\n\n  addEmoji = (emoji: EmojiData) => {\n    this.setState({ chatMsg: this.state.chatMsg + (emoji as any).native });\n  };\n\n  render() {\n    return (\n      <div\n        className={this.props.className}\n        style={{\n          display: this.props.hide ? 'none' : 'flex',\n          flexDirection: 'column',\n          flexGrow: 1,\n          minHeight: 0,\n          marginTop: 0,\n          marginBottom: 0,\n          padding: '8px',\n        }}\n      >\n        <div\n          className=\"chatContainer\"\n          ref={this.messagesRef}\n          style={{ position: 'relative' }}\n        >\n          <Comment.Group>\n            {this.props.chat.map((msg) => (\n              <ChatMessage\n                key={msg.timestamp + msg.id}\n                message={msg}\n                pictureMap={this.props.pictureMap}\n                nameMap={this.props.nameMap}\n                formatMessage={this.formatMessage}\n              />\n            ))}\n            {/* <div ref={this.messagesEndRef} /> */}\n          </Comment.Group>\n          {!this.state.isNearBottom && (\n            <Button\n              size=\"tiny\"\n              onClick={this.scrollToBottom}\n              style={{\n                position: 'sticky',\n                bottom: 0,\n                display: 'block',\n                margin: '0 auto',\n              }}\n            >\n              Jump to bottom\n            </Button>\n          )}\n        </div>\n        <Separator />\n        {this.state.isPickerOpen && (\n          <PickerMenu\n            addEmoji={this.addEmoji}\n            closeMenu={() => this.setState({ isPickerOpen: false })}\n          />\n        )}\n        <Input\n          inverted\n          fluid\n          onKeyPress={(e: any) => e.key === 'Enter' && this.sendChatMsg()}\n          onChange={this.updateChatMsg}\n          value={this.state.chatMsg}\n          error={this.chatTooLong()}\n          icon\n          placeholder=\"Enter a message...\"\n        >\n          <input />\n          <Icon\n            // style={{ right: '40px' }}\n            onClick={() => this.setState({ isPickerOpen: true })}\n            name={'' as any}\n            inverted\n            circular\n            link\n            style={{ opacity: 1 }}\n          >\n            <span role=\"img\" aria-label=\"Emoji\">\n              😀\n            </span>\n          </Icon>\n          {/* <Icon onClick={this.sendChatMsg} name=\"send\" inverted circular link /> */}\n        </Input>\n      </div>\n    );\n  }\n}\n\nconst ChatMessage = ({\n  message,\n  nameMap,\n  pictureMap,\n  formatMessage,\n}: {\n  message: ChatMessage;\n  nameMap: StringDict;\n  pictureMap: StringDict;\n  formatMessage: (cmd: string, msg: string) => React.ReactNode;\n}) => {\n  const { id, timestamp, cmd, msg, system } = message;\n  return (\n    <Comment>\n      {id ? (\n        <Comment.Avatar\n          src={\n            pictureMap[id] || getDefaultPicture(nameMap[id], getColorHex(id))\n          }\n        />\n      ) : null}\n      <Comment.Content>\n        <Comment.Author as=\"a\" className=\"light\">\n          {Boolean(system) && 'System'}\n          {nameMap[id] || id}\n        </Comment.Author>\n        <Comment.Metadata className=\"dark\">\n          <div>{new Date(timestamp).toLocaleTimeString()}</div>\n        </Comment.Metadata>\n        <Comment.Text className=\"light system\">\n          {cmd && formatMessage(cmd, msg)}\n        </Comment.Text>\n        <Comment.Text className=\"light\">{!cmd && msg}</Comment.Text>\n      </Comment.Content>\n    </Comment>\n  );\n};\n\nclass PickerMenuInner extends React.Component<{\n  addEmoji: (emoji: EmojiData) => void;\n  closeMenu: Function;\n}> {\n  handleClickOutside = () => {\n    this.props.closeMenu();\n  };\n  render() {\n    return (\n      <div style={{ position: 'absolute', bottom: '60px' }}>\n        <Picker\n          set=\"google\"\n          sheetSize={64}\n          theme=\"dark\"\n          showPreview={false}\n          showSkinTones={false}\n          onSelect={this.props.addEmoji}\n        />\n      </div>\n    );\n  }\n}\n\nconst PickerMenu = onClickOutside(PickerMenuInner);\n"]},"metadata":{},"sourceType":"module"}