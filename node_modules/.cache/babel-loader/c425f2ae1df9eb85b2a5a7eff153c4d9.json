{"ast":null,"code":"import { BaseClient } from './base'; //import { Member } from './types';\n\nimport { EVENT } from './events';\nexport class NekoClient extends BaseClient {\n  login(url, password, displayname) {\n    this.connect(url, password, displayname);\n  }\n\n  logout() {\n    this.disconnect();\n  } /////////////////////////////\n  // Internal Events\n  /////////////////////////////\n\n\n  [EVENT.CONNECTING]() {}\n\n  [EVENT.CONNECTED]() {\n    this.emit(EVENT.CONNECTED);\n  }\n\n  [EVENT.DISCONNECTED](reason) {\n    console.warn(reason);\n    this.emit(EVENT.DISCONNECTED);\n  }\n\n  [EVENT.TRACK](event) {\n    const {\n      track,\n      streams\n    } = event;\n    this.emit(EVENT.TRACK, track, streams[0]);\n  }\n\n  [EVENT.DATA](data) {\n    console.log('[DATA]', data);\n  } /////////////////////////////\n  // System Events\n  /////////////////////////////\n\n\n  [EVENT.SYSTEM.DISCONNECT]({\n    message\n  }) {\n    this.onDisconnected(new Error(message));\n  } /////////////////////////////\n  // Control Events\n  /////////////////////////////\n\n\n  [EVENT.CONTROL.LOCKED]({\n    id\n  }) {//this.$accessor.remote.setHost(id);\n    // const member = this.member(id);\n    // if (!member) {\n    //   return;\n    // }\n  }\n\n  [EVENT.CONTROL.RELEASE]({\n    id\n  }) {//this.$accessor.remote.reset();\n    // const member = this.member(id);\n    // if (!member) {\n    //   return;\n    // }\n  }\n\n  [EVENT.CONTROL.GIVE]({\n    id,\n    target\n  }) {// const member = this.member(target);\n    // if (!member) {\n    //   return;\n    // }\n    //this.$accessor.remote.setHost(member);\n  }\n\n  [EVENT.CONTROL.CLIPBOARD]({\n    text\n  }) {\n    this.emit(EVENT.CONTROL.CLIPBOARD, text);\n  } /////////////////////////////\n  // Screen Events\n  /////////////////////////////\n\n\n  [EVENT.SCREEN.CONFIGURATIONS]({\n    configurations\n  }) {// console.log('[CONFIGURATIONS]', configurations);\n    //this.$accessor.video.setConfigurations(configurations);\n  }\n\n  [EVENT.SCREEN.RESOLUTION]({\n    id,\n    width,\n    height,\n    rate\n  }) {\n    this.emit(EVENT.SCREEN.RESOLUTION, {\n      width,\n      height,\n      rate\n    });\n  }\n\n}\nexport { default as VBrowser } from './VBrowser';","map":{"version":3,"sources":["/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test_2/src/components/VBrowser/index.ts"],"names":["BaseClient","EVENT","NekoClient","login","url","password","displayname","connect","logout","disconnect","CONNECTING","CONNECTED","emit","DISCONNECTED","reason","console","warn","TRACK","event","track","streams","DATA","data","log","SYSTEM","DISCONNECT","message","onDisconnected","Error","CONTROL","LOCKED","id","RELEASE","GIVE","target","CLIPBOARD","text","SCREEN","CONFIGURATIONS","configurations","RESOLUTION","width","height","rate","default","VBrowser"],"mappings":"AAEA,SAASA,UAAT,QAA2B,QAA3B,C,CACA;;AACA,SAASC,KAAT,QAAsB,UAAtB;AAUA,OAAO,MAAMC,UAAN,SAAyBF,UAAzB,CAAiE;AACtEG,EAAAA,KAAK,CAACC,GAAD,EAAcC,QAAd,EAAgCC,WAAhC,EAAqD;AACxD,SAAKC,OAAL,CAAaH,GAAb,EAAkBC,QAAlB,EAA4BC,WAA5B;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,SAAKC,UAAL;AACD,GAPqE,CAStE;AACA;AACA;;;AACA,GAAWR,KAAK,CAACS,UAAjB,IAA+B,CAAE;;AAEjC,GAAWT,KAAK,CAACU,SAAjB,IAA8B;AAC5B,SAAKC,IAAL,CAAUX,KAAK,CAACU,SAAhB;AACD;;AAED,GAAWV,KAAK,CAACY,YAAjB,EAA+BC,MAA/B,EAA+C;AAC7CC,IAAAA,OAAO,CAACC,IAAR,CAAaF,MAAb;AACA,SAAKF,IAAL,CAAUX,KAAK,CAACY,YAAhB;AACD;;AAED,GAAWZ,KAAK,CAACgB,KAAjB,EAAwBC,KAAxB,EAA8C;AAC5C,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAqBF,KAA3B;AACA,SAAKN,IAAL,CAAUX,KAAK,CAACgB,KAAhB,EAAuBE,KAAvB,EAA8BC,OAAO,CAAC,CAAD,CAArC;AACD;;AAED,GAAWnB,KAAK,CAACoB,IAAjB,EAAuBC,IAAvB,EAAkC;AAChCP,IAAAA,OAAO,CAACQ,GAAR,CAAY,QAAZ,EAAsBD,IAAtB;AACD,GA9BqE,CAgCtE;AACA;AACA;;;AACA,GAAWrB,KAAK,CAACuB,MAAN,CAAaC,UAAxB,EAAoC;AAAEC,IAAAA;AAAF,GAApC,EAAoE;AAClE,SAAKC,cAAL,CAAoB,IAAIC,KAAJ,CAAUF,OAAV,CAApB;AACD,GArCqE,CAuCtE;AACA;AACA;;;AACA,GAAWzB,KAAK,CAAC4B,OAAN,CAAcC,MAAzB,EAAiC;AAAEC,IAAAA;AAAF,GAAjC,EAAyD,CACvD;AACA;AACA;AACA;AACA;AACD;;AAED,GAAW9B,KAAK,CAAC4B,OAAN,CAAcG,OAAzB,EAAkC;AAAED,IAAAA;AAAF,GAAlC,EAA0D,CACxD;AACA;AACA;AACA;AACA;AACD;;AAED,GAAW9B,KAAK,CAAC4B,OAAN,CAAcI,IAAzB,EAA+B;AAAEF,IAAAA,EAAF;AAAMG,IAAAA;AAAN,GAA/B,EAAqE,CACnE;AACA;AACA;AACA;AACA;AACD;;AAED,GAAWjC,KAAK,CAAC4B,OAAN,CAAcM,SAAzB,EAAoC;AAAEC,IAAAA;AAAF,GAApC,EAAuE;AACrE,SAAKxB,IAAL,CAAUX,KAAK,CAAC4B,OAAN,CAAcM,SAAxB,EAAmCC,IAAnC;AACD,GApEqE,CAsEtE;AACA;AACA;;;AACA,GAAWnC,KAAK,CAACoC,MAAN,CAAaC,cAAxB,EAAwC;AACtCC,IAAAA;AADsC,GAAxC,EAEgC,CAC9B;AACA;AACD;;AAED,GAAWtC,KAAK,CAACoC,MAAN,CAAaG,UAAxB,EAAoC;AAClCT,IAAAA,EADkC;AAElCU,IAAAA,KAFkC;AAGlCC,IAAAA,MAHkC;AAIlCC,IAAAA;AAJkC,GAApC,EAK4B;AAC1B,SAAK/B,IAAL,CAAUX,KAAK,CAACoC,MAAN,CAAaG,UAAvB,EAAmC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBC,MAAAA;AAAjB,KAAnC;AACD;;AAvFqE;AA0FxE,SAASC,OAAO,IAAIC,QAApB,QAAoC,YAApC","sourcesContent":["import EventEmitter from 'eventemitter3';\n\nimport { BaseClient } from './base';\n//import { Member } from './types';\nimport { EVENT } from './events';\nimport {\n  ControlClipboardPayload,\n  ControlPayload,\n  ControlTargetPayload,\n  DisconnectPayload,\n  ScreenConfigurationsPayload,\n  ScreenResolutionPayload,\n} from './messages';\n\nexport class NekoClient extends BaseClient implements EventEmitter<any> {\n  login(url: string, password: string, displayname: string) {\n    this.connect(url, password, displayname);\n  }\n\n  logout() {\n    this.disconnect();\n  }\n\n  /////////////////////////////\n  // Internal Events\n  /////////////////////////////\n  protected [EVENT.CONNECTING]() {}\n\n  protected [EVENT.CONNECTED]() {\n    this.emit(EVENT.CONNECTED);\n  }\n\n  protected [EVENT.DISCONNECTED](reason?: Error) {\n    console.warn(reason);\n    this.emit(EVENT.DISCONNECTED);\n  }\n\n  protected [EVENT.TRACK](event: RTCTrackEvent) {\n    const { track, streams } = event;\n    this.emit(EVENT.TRACK, track, streams[0]);\n  }\n\n  protected [EVENT.DATA](data: any) {\n    console.log('[DATA]', data);\n  }\n\n  /////////////////////////////\n  // System Events\n  /////////////////////////////\n  protected [EVENT.SYSTEM.DISCONNECT]({ message }: DisconnectPayload) {\n    this.onDisconnected(new Error(message));\n  }\n\n  /////////////////////////////\n  // Control Events\n  /////////////////////////////\n  protected [EVENT.CONTROL.LOCKED]({ id }: ControlPayload) {\n    //this.$accessor.remote.setHost(id);\n    // const member = this.member(id);\n    // if (!member) {\n    //   return;\n    // }\n  }\n\n  protected [EVENT.CONTROL.RELEASE]({ id }: ControlPayload) {\n    //this.$accessor.remote.reset();\n    // const member = this.member(id);\n    // if (!member) {\n    //   return;\n    // }\n  }\n\n  protected [EVENT.CONTROL.GIVE]({ id, target }: ControlTargetPayload) {\n    // const member = this.member(target);\n    // if (!member) {\n    //   return;\n    // }\n    //this.$accessor.remote.setHost(member);\n  }\n\n  protected [EVENT.CONTROL.CLIPBOARD]({ text }: ControlClipboardPayload) {\n    this.emit(EVENT.CONTROL.CLIPBOARD, text);\n  }\n\n  /////////////////////////////\n  // Screen Events\n  /////////////////////////////\n  protected [EVENT.SCREEN.CONFIGURATIONS]({\n    configurations,\n  }: ScreenConfigurationsPayload) {\n    // console.log('[CONFIGURATIONS]', configurations);\n    //this.$accessor.video.setConfigurations(configurations);\n  }\n\n  protected [EVENT.SCREEN.RESOLUTION]({\n    id,\n    width,\n    height,\n    rate,\n  }: ScreenResolutionPayload) {\n    this.emit(EVENT.SCREEN.RESOLUTION, { width, height, rate });\n  }\n}\n\nexport { default as VBrowser } from './VBrowser';\n"]},"metadata":{},"sourceType":"module"}